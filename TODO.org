#+TITLE: TODO

* dates (browsing)
** DONE assert a loose date +w/ the xcat_same_* functions?+
*** TODO work this out so an existing resource is used if it exists
*** TODO don't make a new one every time its called
** ldatetime tree instances should reflect their printed precision even if there isn't a [persistient] URIRef in the store for it
** DONE operation window has all dates within that ldatetime spec
*** TODO Move to a query within instancetree?
* queries
** DONE get rid of =rdf_find= +and =mixed_query=+
last two remnants of the old query api, can clean up pl.py immensely after
*** DONE actually I just made mixed_query use RPQ.simple_query()
** new queries
*** songs per artist that don't have a release by that artist
*** listen history:
date hierarchy reverse sorted, days have time-sorted listens
*** file hierarchy
** query api
*** specify a python function as the view of a query
*** STRT document
*** DONE syntax for typechecking parent and children of a query
- could use this to get rid of the 'root' in tree views
** DONE +orphan+ protoqueries
instantiate query structure without prolog instance.
- should we do this as a classmethod of RPQ?
- should we just make pl instance optional in RPQ constructor
  - probably not, bunch of methods would have to be turned off
- subclass RPQ and RPQuery to init without pl instance?
* TUI
** header
*** DONE active instance:typeclass
*** DONE active window
*** search term on '/' ?
maybe make this a mixin actually?
*** fix centering
** TODO instance ops
this stuff might work globally, see window management
*** h popup to show useful keypresses
*** organizing keypresses:
1. actions that direct UI change
2. actions that run RPL queries
3. anything else?
any better categories for abstracting these for using stuff interchangably?

**** Operation class
- construct w/ lambda (and query)
- always apply top level window
- pass a orphan query to a window
- lambda is applying a method of a member window
- in top level keypress handler focus

*** DONE should this be its own class
- holding the rpq object? *yes*
- holding the window? *holding a function to update the window*
*** should keypress operations be their own class w/ these references?

** InstanceOps
*** different name from =instance_ops=
*** should be able to load each listed property like from the InstanceView
*** should be able to edit properties from subject or object side
**** new property
1. select from valid property classes
   /create new?/
2. select object/subject from valid as defined by property
   /create new?/
*** should have generic way to create new instance (of anything?)
** investigate running a subterminal esp w/ a subTUI
** window management
*** DONE move instance view list into collapsible pile above instance view
*** some scheme for managing windows without needing to be visible tiles in interface

*** resizing/focusing should apply w/ a resizableWindow mixin?
*** windows should be able to load other windows?
*** move stuff around dynamically ?
*** save and reload window state
are urwid windows pickleable?
*** search mixin?
- on /
- take a display widget for printing search
- take a keypress to search on (otherwise search immediately)
- recurse over widgets until there's a text widget
  - search over children (common interface or bunch of isinstance?)
  - if isinstance ur.Text:
    + match for regex:
      - focus and return true or if not focusable return false
    + else:
      - return None
  - if children return false focus and return true

** InstanceTree
*** dynamic descendant queries
**** define each query as property on schema terms?
- cycle thru queries for selected instance that populate children w/ like S-Tab
**** kinda like above but more functional?
- take some number of schema terms and produce another one (or set of other ones expressing possibility space?
*** make the window automatically do the "instance_of" part of the query
* music
** STRT find music files which aren't imported as xcat:AudioFile
*** STRT list by file metadata
*** bulk import albums
*** STRT search for rdf entries that match metadata
*** STRT correct tracklists esp with missing entries
**** DONE reclassify files as audiofiles using audiofiles from release that are already in the store as recordings
**** DONE rearrange tracks if necessary
**** TODO delete files from window before adding as tracklist

** fix mpd_player ugly wrapping of column contents
